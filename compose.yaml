volumes:
  pgdata:

x-scraper-env: &scraper-env
  environment:
    DB_HOST: db
    DB_NAME: ${DB_NAME}
    DB_SCRAPER_USER: ${DB_SCRAPER_USER}
    DB_SCRAPER_PASSWORD: ${DB_SCRAPER_PASSWORD}
    DB_PORT: 5432
    WEB_REQUEST_INTERVAL_MIN: ${WEB_REQUEST_INTERVAL_MIN}
    WEB_REQUEST_INTERVAL_MAX: ${WEB_REQUEST_INTERVAL_MAX}
    DB_REQUEST_INTERVAL: ${DB_REQUEST_INTERVAL}
    NOTHING_TODO_INTERVAL: ${NOTHING_TODO_INTERVAL}

services:
  ### DATABASE RELATED SERVICES ###
  db:
    image: postgres:17-alpine
    container_name: work_scraper_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_ADMIN_USER}
      POSTGRES_PASSWORD: ${DB_ADMIN_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_ADMIN_USER} -h 127.0.0.1 -p 5432"]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 10s
  
  # performing updates & setting up scraper user
  db-scraper-migrations:
    image: flyway/flyway:latest-alpine
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./database/migrations:/migrations
      - ./database/setup:/setup
    environment:
      FLYWAY_URL: jdbc:postgresql://db:5432/${DB_NAME}
      FLYWAY_USER: ${DB_ADMIN_USER}
      FLYWAY_PASSWORD: ${DB_ADMIN_PASSWORD}
      FLYWAY_LOCATIONS: filesystem:/migrations
      DB_SCRAPER_USER: ${DB_SCRAPER_USER}
      DB_SCRAPER_PASSWORD: ${DB_SCRAPER_PASSWORD}
      POSTGRES_PASSWORD: ${DB_ADMIN_PASSWORD}
      PGPASSWORD: ${DB_ADMIN_PASSWORD}
    entrypoint: >
      sh -c "
        flyway -connectRetries=10 migrate &&
        apk add --no-cache gettext postgresql17-client &&
        echo 'Creating low privilege user and giving perms' &&
        envsubst < /setup/setup_permissions.sql.template > /setup/setup_permissions.sql &&
        psql -h db -U ${DB_ADMIN_USER} -d ${DB_NAME} -f /setup/setup_permissions.sql &&
        touch /setup-done
      "
  
  
  ### SCRAPERS RELATED SERVICES ###
  # cv.lv scraper
  scraper-cv-lv:
    build: ./scrapers/cv-lv
    <<: *scraper-env
    depends_on:
      db-scraper-migrations:
        condition: service_completed_successfully
    volumes:
      - ./keywords.json:/keywords.json
  
  # cvvp.nva.gov.lv scraper
  scraper-cvvp-nva-gov-lv:
    build: ./scrapers/cvvp-nva-gov-lv
    <<: *scraper-env
    depends_on:
      db-scraper-migrations:
        condition: service_completed_successfully
    volumes:
      - ./keywords.json:/keywords.json