services:
  db:
    image: postgres:17-alpine
    container_name: work_scraper_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_ADMIN_USER}
      POSTGRES_PASSWORD: ${DB_ADMIN_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data

  flyway:
    image: flyway/flyway:latest-alpine
    container_name: work_scraper_flyway
    depends_on:
      - db
    volumes:
      - ./migrations:/flyway/sql
      - flyway-status:/flyway-done
    command: sh -c "-connectRetries=10 migrate && touch /flyway-done/migrations.ok"
    environment:
      FLYWAY_URL: jdbc:postgresql://db:5432/${DB_NAME}
      FLYWAY_USER: ${DB_ADMIN_USER}
      FLYWAY_PASSWORD: ${DB_ADMIN_PASSWORD}
  
  db-setup:
    image: alpine
    container_name: db_final_setup
    depends_on:
      - db
      - flyway
    volumes:
      - ./setup:/setup
      - flyway-status:/flyway-done
    entrypoint: >
      sh -c "
        apk add --no-cache postgresql-client gettext &&
        echo 'Waiting for DB to be ready...' &&
        until pg_isready -h db -U ${DB_ADMIN_USER} -d ${DB_NAME}; do sleep 1; done &&
        echo 'Waiting for Flyway to complete...' &&
        while [ ! -f /flyway-done/migrations.ok ]; do sleep 1; done &&
        echo 'Substituting variables...' &&
        envsubst < /setup/setup_permissions.sql.template > /setup/setup_permissions.sql &&
        echo 'Running postinit SQL...' &&
        psql -h db -U ${DB_ADMIN_USER} -d ${DB_NAME} -f /setup/setup_permissions.sql
      "
    environment:
      PGPASSWORD: ${DB_ADMIN_PASSWORD}
      POSTGRES_USER: ${DB_ADMIN_USER}
      POSTGRES_DB: ${DB_NAME}
      DB_SCRAPER_USER: ${DB_SCRAPER_USER}
      DB_SCRAPER_PASSWORD: ${DB_SCRAPER_PASSWORD}

volumes:
  pgdata:
  flyway-status: